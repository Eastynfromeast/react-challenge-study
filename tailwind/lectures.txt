# tailwind css
    https://tailwindcss.com/
    UI is important but we need to be productive and fast
    tailwind css ?  A utility-first CSS framework
        has a bunch of class names gives you default sizing and colors 

        - utility-first ? means it has bunch of tiny class names
        - it doesn't give you styles but has default values
        - doesn't seperate design and content

        is it bad to mixing CSS with markup language?!
            try it first then you will know

        it is super easy to build a responsive website with tailwind css

# IntelliSense
    install tailwind css intellisense before starting practice

    tailwind css auto complete
        mac: cmd + i


# Card Component

    p-10 === padding 2.5rem (40px)
    py-10 === padding-top: 2.5rem & padding-bottom: 2.5rem


# Modifier
    modifier allows you to apply styles conditionally
    modifier is especially useful with forms or lists

    dark mode modifier
         dark:bg-gray-700
         tailwind css look for user's system appearance setting


# Responsive modifiers
    easy to do responsive design with tailwind css
    tailwind css is mobile first!


    media query min-width (i guess)
        sm == 640px
        md == 768px
        lg == 1024px
        xl == 1280px
        2xl == 1536px

# Form modifiers
    modifiers can be together!
    invalid:focus:ring-red-500

    sibling selectors? peer
        put peer on the sibling 
        and use it on the other sibling like peer-invalid

        hidden peer-invalid:block


# State modifiers
    *: common css of the children
    has-[]: to a child that has a specific condition
        suedo class from CSS
        has-[.peer]:bg-green-100
        has-[:invalid]:bg-red-100

# List and Animations
        first, last, odd, even, empty 
        empty:w-24 
        animate-

# JIT
    Just In Time compiler

    Two lies Nico made to us!!!
        first, tailwind is not a huuuuge CSS file
            that would be not good for the app
        ==> tailwind is not a file but it is a "COMPILER"
        second, ???
            we can stack many modifiers

    css codes in class names are generated by the compiler
    Thanks to the compiler, we can have arbitrary values
        h-[value you want]
    This power comes from tailwind.config.ts
        theme: {
            extend:{
                 margin:{
                    "tomato":"120px",
                },
                borderRadius:{
                    "sexy-name":"11.11px",
                }
            }
        },
        

# Directives
    the compiler will replace those placeholders
    
    @tailwind base;
        where the compiler puts default styles that tailwind comes with
        includes all the basic styles 
        do same work with reset css

    @tailwind components;

    @tailwind utilities;
        all the utility class names

    @apply directives 
        can create a class name encapsulate styles you want to put
    .btn {
        @apply rounded-sexy-name mt-tomato h-10 w-full bg-black font-medium text-white 
    }
    
    @layer directives
        allows you to extend the layer styles like base, components, utilities
        
        general style
        @layer base {
            a {
                @apply text-blue-500
            }
        }

        style can be used in any components
        @layer utilities {
            .text-bigger-hello {
                @apply text-3xl font-semibold
            }
        }

        abstracting many classes together for a component
        @layer components {
            .btn {
                @apply rounded-sexy-name mt-tomato h-10 w-full bg-black font-medium text-white 
            }
        }

# Plugins  
    tailwind offers plugins
    daisyUI